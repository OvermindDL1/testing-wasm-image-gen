[package]
name = "rust-webpack-template"
description = "My super awesome Rust, WebAssembly, and Webpack project!"
version = "0.1.0"
authors = ["You <you@example.com>"]
categories = ["wasm"]
readme = "README.md"
edition = "2018"

[lib]
crate-type = ["cdylib"]

[profile.release]
lto = "thin"
opt-level = "s"

[features]
default = ["dev"]
dev = ["console_error_panic_hook"]

[dependencies]
wasm-bindgen = "0.2.64"
noise = "0.7.0"
image = { version = "0.23.14", default-features = false, features = ["png", "bmp"] }
imageproc = "0.22.0"
rust-embed = { version = "6.0.0", features = ["debug-embed"] }
once_cell = "1.8.0"

# `wee_alloc` is a tiny allocator for wasm that is only ~1K in code size
# compared to the default allocator's ~10K. However, it is slower than the default
# allocator, so it's not enabled by default.
wee_alloc = { version = "0.4.5", optional = true }

# The `console_error_panic_hook` crate provides better debugging of panics by
# logging them with `console.error`. This is great for development, but requires
# all the `std::fmt` and `std::panicking` infrastructure, so it's only enabled
# in debug mode.
console_error_panic_hook = { version = "0.1.6", optional = true }

# The `web-sys` crate allows you to interact with the various browser APIs,
# like the DOM.
[dependencies.web-sys]
version = "0.3.22"
features = ["console"]

# These crates are used for running unit tests.
[dev-dependencies]
wasm-bindgen-test = "0.3.13"
futures = "0.1.27"
js-sys = "0.3.22"
wasm-bindgen-futures = "0.3.22"
